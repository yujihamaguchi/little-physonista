{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_sharepointonline_name": {
            "defaultValue": "sharepointonline",
            "type": "String"
        },
        "workflows_sync_ingest_setting_name": {
            "defaultValue": "sync-ingest-setting",
            "type": "String"
        },
        "workflows_sync_package_version_name": {
            "defaultValue": "sync-package-version",
            "type": "String"
        },
        "workflows_sync_project_settings_name": {
            "defaultValue": "sync-project-settings",
            "type": "String"
        },
        "workflows_sync_schedule_setting_name": {
            "defaultValue": "sync-schedule-setting",
            "type": "String"
        },
        "workflows_sync_monitoring_setting_name": {
            "defaultValue": "sync-monitoring-setting",
            "type": "String"
        },
        "integrationAccounts_com_avanade_yuji_hamaguchi_test_name": {
            "defaultValue": "com-avanade-yuji-hamaguchi-test",
            "type": "String"
        },
        "templateSpecs_yuji_hamaguchi_sync_workspace_setting_group_name": {
            "defaultValue": "yuji-hamaguchi-sync-workspace-setting-group",
            "type": "String"
        },
        "connections_sharepointonline_externalid": {
            "defaultValue": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/resourceGroups/sync-monitoring-setting_group/providers/Microsoft.Web/connections/sharepointonline",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/integrationAccounts",
            "apiVersion": "2016-06-01",
            "name": "[parameters('integrationAccounts_com_avanade_yuji_hamaguchi_test_name')]",
            "location": "japaneast",
            "sku": {
                "name": "Free"
            },
            "properties": {
                "state": "Enabled",
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_sync_monitoring_setting_name')]",
            "location": "japaneast",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "branch_name": {
                            "defaultValue": "main",
                            "type": "String"
                        },
                        "list_address": {
                            "defaultValue": "https://avanade-my.sharepoint.com/personal/yuji_hamaguchi_avanade_com/",
                            "type": "String"
                        },
                        "list_name": {
                            "defaultValue": "Monitoring List",
                            "type": "String"
                        },
                        "repository_address": {
                            "defaultValue": "https://dev.azure.com/Japan-Apps-and-Infra/SOMPO-HD-DevOps/_apis/git/repositories/SOMPO-HD-DevOps",
                            "type": "String"
                        },
                        "repository_token": {
                            "defaultValue": "eXVqaS5oYW1hZ3VjaGk6aWZiZ25pYnloazRuZ3FmNzNidnJoenM2eXczYzR5dHNiYmtya2NoaXZxNWdkYTJkYnh5cQ==",
                            "type": "String"
                        },
                        "sharepoint_address": {
                            "defaultValue": "https://avanade.sharepoint.com/sites/yuji.hamaguchi.test/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "egaku__モニタリング設定情報をリストのアイテムとして登録": {
                            "foreach": "@body('egaku_モニタリング設定情報の解析')?['monitorings']",
                            "actions": {
                                "アイテムの登録": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "RID": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['RID']",
                                            "description": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['description']",
                                            "path": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['path']",
                                            "production": {
                                                "Value": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['production']"
                                            },
                                            "rule": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['rule']",
                                            "schedule": {
                                                "Id": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['schedule']"
                                            },
                                            "staging": {
                                                "Value": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['staging']"
                                            },
                                            "viewname": "@items('egaku__モニタリング設定情報をリストのアイテムとして登録')?['viewName']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを削除": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "egaku_モニタリング設定情報の取得": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/monitoring-setting.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_モニタリング設定情報の解析": {
                            "runAfter": {
                                "egaku_モニタリング設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_モニタリング設定情報の取得')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "monitorings": {
                                            "items": {
                                                "properties": {
                                                    "RID": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    },
                                                    "production": {
                                                        "type": "string"
                                                    },
                                                    "rule": {
                                                        "type": "string"
                                                    },
                                                    "schedule": {
                                                        "type": "string"
                                                    },
                                                    "staging": {
                                                        "type": "string"
                                                    },
                                                    "viewName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "viewName",
                                                    "description",
                                                    "RID",
                                                    "path",
                                                    "rule",
                                                    "staging",
                                                    "production",
                                                    "schedule"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "リポジトリの最新コミット情報を取得": {
                            "runAfter": {
                                "egaku_モニタリング設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Basic @{parameters('repository_token')}"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "7.1-preview.1",
                                    "searchCriteria.$top": "1"
                                },
                                "uri": "@{parameters('repository_address')}/commits"
                            }
                        },
                        "既存のリストの全アイテムを削除": {
                            "foreach": "@body('既存のリストの全アイテムを取得（削除の為）')?['value']",
                            "actions": {
                                "アイテムの削除": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items/@{encodeURIComponent(items('既存のリストの全アイテムを削除')?['ID'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを取得（削除の為）": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "既存のリストの全アイテムを取得（削除の為）": {
                            "runAfter": {
                                "egaku_モニタリング設定情報の解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                            }
                        },
                        "最新コミット_ID_を指定し、egaku_モニタリング設定情報をリポジトリにプッシュ": {
                            "foreach": "@body('最新コミット_ID_取得の為、コミット情報を解析')?['value']",
                            "actions": {
                                "最新コミット_ID_を指定し、egaku_モニタリング設定情報をリポジトリにプッシュ（内部）": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "commits": [
                                                {
                                                    "changes": [
                                                        {
                                                            "changeType": "edit",
                                                            "item": {
                                                                "path": "/infrastructure/monitoring-setting.json"
                                                            },
                                                            "newContent": {
                                                                "content": "@{body('egaku_モニタリング設定情報の取得')}",
                                                                "contentType": "rawtext"
                                                            }
                                                        }
                                                    ],
                                                    "comment": "Update monitoring-setting.json file."
                                                }
                                            ],
                                            "refUpdates": [
                                                {
                                                    "name": "refs/heads/@{parameters('branch_name')}",
                                                    "oldObjectId": "@{items('最新コミット_ID_を指定し、egaku_モニタリング設定情報をリポジトリにプッシュ')?['commitId']}"
                                                }
                                            ]
                                        },
                                        "headers": {
                                            "Authorization": "Basic @{parameters('repository_token')}"
                                        },
                                        "method": "POST",
                                        "queries": {
                                            "api-version": "7.1-preview.2"
                                        },
                                        "uri": "@{parameters('repository_address')}/pushes"
                                    }
                                }
                            },
                            "runAfter": {
                                "最新コミット_ID_取得の為、コミット情報を解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "最新コミット_ID_取得の為、コミット情報を解析": {
                            "runAfter": {
                                "リポジトリの最新コミット情報を取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('リポジトリの最新コミット情報を取得')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "author": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "changeCounts": {
                                                        "properties": {
                                                            "Add": {
                                                                "type": "integer"
                                                            },
                                                            "Delete": {
                                                                "type": "integer"
                                                            },
                                                            "Edit": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "commitId": {
                                                        "type": "string"
                                                    },
                                                    "committer": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remoteUrl": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "commitId",
                                                    "author",
                                                    "committer",
                                                    "comment",
                                                    "changeCounts",
                                                    "url",
                                                    "remoteUrl"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sharepointonline": {
                                "connectionId": "[parameters('connections_sharepointonline_externalid')]",
                                "connectionName": "sharepointonline",
                                "id": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/sharepointonline"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2022-02-01",
            "name": "[parameters('templateSpecs_yuji_hamaguchi_sync_workspace_setting_group_name')]",
            "location": "japaneast",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_sharepointonline_name')]",
            "location": "japaneast",
            "kind": "V1",
            "properties": {
                "displayName": "yuji.hamaguchi@avanade.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2024-02-28T06:24:33.7918239Z",
                "changedTime": "2024-03-28T01:44:55.3979466Z",
                "api": {
                    "name": "[parameters('connections_sharepointonline_name')]",
                    "displayName": "SharePoint",
                    "description": "SharePoint helps organizations share and collaborate with colleagues, partners, and customers. You can connect to SharePoint Online or to an on-premises SharePoint 2013 or 2016 farm using the On-Premises Data Gateway to manage documents and list items.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1682/1.0.1682.3675/', parameters('connections_sharepointonline_name'), '/icon.png')]",
                    "brandColor": "#036C70",
                    "id": "[concat('/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/', parameters('connections_sharepointonline_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_sync_ingest_setting_name')]",
            "location": "japaneast",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "branch_name": {
                            "defaultValue": "main",
                            "type": "String"
                        },
                        "list_address": {
                            "defaultValue": "https://avanade-my.sharepoint.com/personal/yuji_hamaguchi_avanade_com/",
                            "type": "String"
                        },
                        "list_name": {
                            "defaultValue": "Ingest List",
                            "type": "String"
                        },
                        "repository_address": {
                            "defaultValue": "https://dev.azure.com/Japan-Apps-and-Infra/SOMPO-HD-DevOps/_apis/git/repositories/SOMPO-HD-DevOps",
                            "type": "String"
                        },
                        "repository_token": {
                            "defaultValue": "eXVqaS5oYW1hZ3VjaGk6aWZiZ25pYnloazRuZ3FmNzNidnJoenM2eXczYzR5dHNiYmtya2NoaXZxNWdkYTJkYnh5cQ==",
                            "type": "String"
                        },
                        "sharepoint_address": {
                            "defaultValue": "https://avanade.sharepoint.com/sites/yuji.hamaguchi.test/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "egaku__データインジェスト設定情報をリストのアイテムとして登録": {
                            "foreach": "@body('egaku_データインジェスト設定情報の解析')?['ingests']",
                            "actions": {
                                "アイテムの登録": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "RID": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['RID']",
                                            "datesetname": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['dataSetName']",
                                            "description": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['description']",
                                            "path": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['path']",
                                            "schedule": {
                                                "Id": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['schedule']"
                                            },
                                            "updatevia": {
                                                "Id": "@items('egaku__データインジェスト設定情報をリストのアイテムとして登録')?['updateVia']"
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを削除": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "egaku_データインジェスト設定情報の取得": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/ingest-setting.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_データインジェスト設定情報の解析": {
                            "runAfter": {
                                "egaku_データインジェスト設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_データインジェスト設定情報の取得')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "ingests": {
                                            "items": {
                                                "properties": {
                                                    "RID": {
                                                        "type": "string"
                                                    },
                                                    "dataSetName": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    },
                                                    "schedule": {
                                                        "type": "string"
                                                    },
                                                    "updateVia": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "dataSetName",
                                                    "description",
                                                    "path",
                                                    "updateVia",
                                                    "RID",
                                                    "schedule"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "リポジトリの最新コミット情報を取得": {
                            "runAfter": {
                                "egaku_データインジェスト設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Basic @{parameters('repository_token')}"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "7.1-preview.1",
                                    "searchCriteria.$top": "1"
                                },
                                "uri": "@{parameters('repository_address')}/commits"
                            }
                        },
                        "既存のリストの全アイテムを削除": {
                            "foreach": "@body('既存のリストの全アイテムを取得（削除の為）')?['value']",
                            "actions": {
                                "アイテムの削除": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items/@{encodeURIComponent(items('既存のリストの全アイテムを削除')?['ID'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを取得（削除の為）": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "既存のリストの全アイテムを取得（削除の為）": {
                            "runAfter": {
                                "egaku_データインジェスト設定情報の解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                            }
                        },
                        "最新コミット_ID_を指定し、egaku_データインジェスト設定情報をリポジトリにプッシュ": {
                            "foreach": "@body('最新コミット_ID_取得の為、コミット情報を解析')?['value']",
                            "actions": {
                                "最新コミット_ID_を指定し、egaku_データインジェスト設定情報をリポジトリにプッシュ（内部）": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "commits": [
                                                {
                                                    "changes": [
                                                        {
                                                            "changeType": "edit",
                                                            "item": {
                                                                "path": "/infrastructure/ingest-setting.json"
                                                            },
                                                            "newContent": {
                                                                "content": "@{body('egaku_データインジェスト設定情報の取得')}",
                                                                "contentType": "rawtext"
                                                            }
                                                        }
                                                    ],
                                                    "comment": "Update ingest-setting.json file."
                                                }
                                            ],
                                            "refUpdates": [
                                                {
                                                    "name": "refs/heads/@{parameters('branch_name')}",
                                                    "oldObjectId": "@{items('最新コミット_ID_を指定し、egaku_データインジェスト設定情報をリポジトリにプッシュ')?['commitId']}"
                                                }
                                            ]
                                        },
                                        "headers": {
                                            "Authorization": "Basic @{parameters('repository_token')}"
                                        },
                                        "method": "POST",
                                        "queries": {
                                            "api-version": "7.1-preview.2"
                                        },
                                        "uri": "@{parameters('repository_address')}/pushes"
                                    }
                                }
                            },
                            "runAfter": {
                                "最新コミット_ID_取得の為、コミット情報を解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "最新コミット_ID_取得の為、コミット情報を解析": {
                            "runAfter": {
                                "リポジトリの最新コミット情報を取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('リポジトリの最新コミット情報を取得')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "author": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "changeCounts": {
                                                        "properties": {
                                                            "Add": {
                                                                "type": "integer"
                                                            },
                                                            "Delete": {
                                                                "type": "integer"
                                                            },
                                                            "Edit": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "commitId": {
                                                        "type": "string"
                                                    },
                                                    "committer": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remoteUrl": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "commitId",
                                                    "author",
                                                    "committer",
                                                    "comment",
                                                    "changeCounts",
                                                    "url",
                                                    "remoteUrl"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sharepointonline": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]",
                                "connectionName": "sharepointonline",
                                "id": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/sharepointonline"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_sync_project_settings_name')]",
            "location": "japaneast",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "branch_name": {
                            "defaultValue": "main",
                            "type": "String"
                        },
                        "list_address": {
                            "defaultValue": "https://avanade-my.sharepoint.com/personal/yuji_hamaguchi_avanade_com/",
                            "type": "String"
                        },
                        "list_name": {
                            "defaultValue": "【 egaku v1 】Project List",
                            "type": "String"
                        },
                        "repository_address": {
                            "defaultValue": "https://dev.azure.com/Japan-Apps-and-Infra/SOMPO-HD-DevOps/_apis/git/repositories/SOMPO-HD-DevOps",
                            "type": "String"
                        },
                        "repository_token": {
                            "defaultValue": "eXVqaS5oYW1hZ3VjaGk6aWZiZ25pYnloazRuZ3FmNzNidnJoenM2eXczYzR5dHNiYmtya2NoaXZxNWdkYTJkYnh5cQ==",
                            "type": "String"
                        },
                        "sharepoint_address": {
                            "defaultValue": "https://avanade.sharepoint.com/sites/yuji.hamaguchi.test/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "egaku__プロジェクト設定情報をリストのアイテムとして登録": {
                            "foreach": "@body('egaku_プロジェクト設定情報の解析')?['projects']",
                            "actions": {
                                "groups_配列変数に_group_全てを追加": {
                                    "foreach": "@items('egaku__プロジェクト設定情報をリストのアイテムとして登録')?['groups']",
                                    "actions": {
                                        "groups_配列変数に_group_を追加": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "groups",
                                                "value": {
                                                    "Id": "@items('groups_配列変数に_group_全てを追加')"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "groups_配列変数の初期化": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "groups_配列変数の初期化": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "groups",
                                        "value": "@null"
                                    }
                                },
                                "アイテムを登録": {
                                    "runAfter": {
                                        "groups_配列変数に_group_全てを追加": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Component": "@items('egaku__プロジェクト設定情報をリストのアイテムとして登録')?['component']",
                                            "Groups": "@variables('groups')",
                                            "Name": "@items('egaku__プロジェクト設定情報をリストのアイテムとして登録')?['name']",
                                            "description": "@items('egaku__プロジェクト設定情報をリストのアイテムとして登録')?['description']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "groups_列に格納する値を保持する配列変数を用意": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "egaku_プロジェクト設定情報の取得": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/workspace-setting.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_プロジェクト設定情報の解析": {
                            "runAfter": {
                                "egaku_プロジェクト設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_プロジェクト設定情報の取得')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "projects": {
                                            "items": {
                                                "properties": {
                                                    "component": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "groups": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "description",
                                                    "component",
                                                    "groups"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "groups_列に格納する値を保持する配列変数を用意": {
                            "runAfter": {
                                "既存のリストの全アイテムを削除": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "groups",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "リポジトリの最新コミット情報を取得": {
                            "runAfter": {
                                "egaku_プロジェクト設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Basic @{parameters('repository_token')}"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "7.1-preview.1",
                                    "searchCriteria.$top": "1",
                                    "searchCriteria.itemVersion.version": "@parameters('branch_name')"
                                },
                                "uri": "@{parameters('repository_address')}/commits"
                            }
                        },
                        "既存のリストの全アイテムを削除": {
                            "foreach": "@body('既存のリストの全アイテムを取得（削除の為）')?['value']",
                            "actions": {
                                "アイテムの削除": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items/@{encodeURIComponent(items('既存のリストの全アイテムを削除')?['ID'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを取得（削除の為）": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "既存のリストの全アイテムを取得（削除の為）": {
                            "runAfter": {
                                "egaku_プロジェクト設定情報の解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                            }
                        },
                        "最新コミット_ID_を指定し、egaku_プロジェクト設定情報をリポジトリにプッシュ": {
                            "foreach": "@body('最新コミット_ID_取得の為、コミット情報を解析')?['value']",
                            "actions": {
                                "最新コミット_ID_を指定し、egaku_プロジェクト設定情報をリポジトリにプッシュ（内部）": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "commits": [
                                                {
                                                    "changes": [
                                                        {
                                                            "changeType": "edit",
                                                            "item": {
                                                                "path": "/infrastructure/workspace-setting.json"
                                                            },
                                                            "newContent": {
                                                                "content": "@{body('egaku_プロジェクト設定情報の取得')}",
                                                                "contentType": "rawtext"
                                                            }
                                                        }
                                                    ],
                                                    "comment": "Update workspace-setting.json file."
                                                }
                                            ],
                                            "refUpdates": [
                                                {
                                                    "name": "refs/heads/@{parameters('branch_name')}",
                                                    "oldObjectId": "@{items('最新コミット_ID_を指定し、egaku_プロジェクト設定情報をリポジトリにプッシュ')?['commitId']}"
                                                }
                                            ]
                                        },
                                        "headers": {
                                            "Authorization": "Basic @{parameters('repository_token')}"
                                        },
                                        "method": "POST",
                                        "queries": {
                                            "api-version": "7.1-preview.2"
                                        },
                                        "uri": "@{parameters('repository_address')}/pushes"
                                    }
                                }
                            },
                            "runAfter": {
                                "最新コミット_ID_取得の為、コミット情報を解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "最新コミット_ID_取得の為、コミット情報を解析": {
                            "runAfter": {
                                "リポジトリの最新コミット情報を取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('リポジトリの最新コミット情報を取得')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "author": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "changeCounts": {
                                                        "properties": {
                                                            "Add": {
                                                                "type": "integer"
                                                            },
                                                            "Delete": {
                                                                "type": "integer"
                                                            },
                                                            "Edit": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "commitId": {
                                                        "type": "string"
                                                    },
                                                    "committer": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remoteUrl": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "commitId",
                                                    "author",
                                                    "committer",
                                                    "comment",
                                                    "changeCounts",
                                                    "url",
                                                    "remoteUrl"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sharepointonline": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]",
                                "connectionName": "sharepointonline",
                                "id": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/sharepointonline"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_sync_schedule_setting_name')]",
            "location": "japaneast",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "branch_name": {
                            "defaultValue": "main",
                            "type": "String"
                        },
                        "list_address": {
                            "defaultValue": "https://avanade-my.sharepoint.com/personal/yuji_hamaguchi_avanade_com/",
                            "type": "String"
                        },
                        "list_name": {
                            "defaultValue": "Schedule List",
                            "type": "String"
                        },
                        "repository_address": {
                            "defaultValue": "https://dev.azure.com/Japan-Apps-and-Infra/SOMPO-HD-DevOps/_apis/git/repositories/SOMPO-HD-DevOps",
                            "type": "String"
                        },
                        "repository_token": {
                            "defaultValue": "eXVqaS5oYW1hZ3VjaGk6aWZiZ25pYnloazRuZ3FmNzNidnJoenM2eXczYzR5dHNiYmtya2NoaXZxNWdkYTJkYnh5cQ==",
                            "type": "String"
                        },
                        "sharepoint_address": {
                            "defaultValue": "https://avanade.sharepoint.com/sites/yuji.hamaguchi.test/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "egaku__スケジュール設定情報をリストのアイテムとして登録": {
                            "foreach": "@body('egaku_スケジュール設定情報の解析')?['schedules']",
                            "actions": {
                                "アイテムを登録": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "RID": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['RID']",
                                            "condition": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['condition']",
                                            "description": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['description']",
                                            "name": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['name']",
                                            "targetdataset": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['targetDataSet']",
                                            "version": "@items('egaku__スケジュール設定情報をリストのアイテムとして登録')?['version']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを削除": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "egaku_スケジュール設定情報の取得": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/schedule-setting.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_スケジュール設定情報の解析": {
                            "runAfter": {
                                "egaku_スケジュール設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_スケジュール設定情報の取得')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "schedules": {
                                            "items": {
                                                "properties": {
                                                    "RID": {
                                                        "type": "string"
                                                    },
                                                    "condition": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "targetDataSet": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "description",
                                                    "RID",
                                                    "version",
                                                    "targetDataSet",
                                                    "condition"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "リポジトリの最新コミット情報を取得": {
                            "runAfter": {
                                "egaku_スケジュール設定情報の取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Basic @{parameters('repository_token')}"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "7.1-preview.1",
                                    "searchCriteria.$top": "1"
                                },
                                "uri": "@{parameters('repository_address')}/commits"
                            }
                        },
                        "既存のリストの全アイテムを削除": {
                            "foreach": "@body('既存のリストの全アイテムを取得（削除の為）')?['value']",
                            "actions": {
                                "アイテムの削除": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items/@{encodeURIComponent(items('既存のリストの全アイテムを削除')?['ID'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを取得（削除の為）": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "既存のリストの全アイテムを取得（削除の為）": {
                            "runAfter": {
                                "egaku_スケジュール設定情報の解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                            }
                        },
                        "最新コミット_ID_を指定し、egaku_スケジュール設定情報をリポジトリにプッシュ": {
                            "foreach": "@body('最新コミット_ID_取得の為、コミット情報を解析')?['value']",
                            "actions": {
                                "最新コミット_ID_を指定し、egaku_スケジュール設定情報をリポジトリにプッシュ（内部）": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "commits": [
                                                {
                                                    "changes": [
                                                        {
                                                            "changeType": "edit",
                                                            "item": {
                                                                "path": "/infrastructure/schedule-setting.json"
                                                            },
                                                            "newContent": {
                                                                "content": "@{body('egaku_スケジュール設定情報の取得')}",
                                                                "contentType": "rawtext"
                                                            }
                                                        }
                                                    ],
                                                    "comment": "Update schedule-setting.json file."
                                                }
                                            ],
                                            "refUpdates": [
                                                {
                                                    "name": "refs/heads/@{parameters('branch_name')}",
                                                    "oldObjectId": "@{items('最新コミット_ID_を指定し、egaku_スケジュール設定情報をリポジトリにプッシュ')?['commitId']}"
                                                }
                                            ]
                                        },
                                        "headers": {
                                            "Authorization": "Basic @{parameters('repository_token')}"
                                        },
                                        "method": "POST",
                                        "queries": {
                                            "api-version": "7.1-preview.2"
                                        },
                                        "uri": "@{parameters('repository_address')}/pushes"
                                    }
                                }
                            },
                            "runAfter": {
                                "最新コミット_ID_取得の為、コミット情報を解析": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "最新コミット_ID_取得の為、コミット情報を解析": {
                            "runAfter": {
                                "リポジトリの最新コミット情報を取得": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('リポジトリの最新コミット情報を取得')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "author": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "changeCounts": {
                                                        "properties": {
                                                            "Add": {
                                                                "type": "integer"
                                                            },
                                                            "Delete": {
                                                                "type": "integer"
                                                            },
                                                            "Edit": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "commitId": {
                                                        "type": "string"
                                                    },
                                                    "committer": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remoteUrl": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "commitId",
                                                    "author",
                                                    "committer",
                                                    "comment",
                                                    "changeCounts",
                                                    "url",
                                                    "remoteUrl"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sharepointonline": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]",
                                "connectionName": "sharepointonline",
                                "id": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/sharepointonline"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2022-02-01",
            "name": "[concat(parameters('templateSpecs_yuji_hamaguchi_sync_workspace_setting_group_name'), '/1.0')]",
            "location": "japaneast",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('templateSpecs_yuji_hamaguchi_sync_workspace_setting_group_name'))]"
            ],
            "properties": {
                "mainTemplate": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_sync_package_version_name')]",
            "location": "japaneast",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_com_avanade_yuji_hamaguchi_test_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "integrationAccount": {
                    "id": "[resourceId('Microsoft.Logic/integrationAccounts', parameters('integrationAccounts_com_avanade_yuji_hamaguchi_test_name'))]"
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "list_address": {
                            "defaultValue": "https://avanade-my.sharepoint.com/personal/yuji_hamaguchi_avanade_com/",
                            "type": "String"
                        },
                        "list_name": {
                            "defaultValue": "Package Version List",
                            "type": "String"
                        },
                        "sharepoint_address": {
                            "defaultValue": "https://avanade.sharepoint.com/sites/yuji.hamaguchi.test/",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "egaku__個社別デプロイ情報をリストのアイテムとして登録": {
                            "foreach": "@body('ジョイン済み個社別デプロイ情報を解析する')",
                            "actions": {
                                "アイテムの登録": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "clientcompanyname": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['clinetCompanyName']",
                                            "productiondeployapprover": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['prodDeployApprover']",
                                            "productiondeploytimestamp": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['prodDeployTimeStamp']",
                                            "productionver_x002e_": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['prodVersion']",
                                            "relatedURL": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['relatedURL']",
                                            "stagingdelopytimestamp": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['stgDeployTimeStamp']",
                                            "stagingver_x002e_": "@items('egaku__個社別デプロイ情報をリストのアイテムとして登録')['stgVersion']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを削除": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "egaku_ステージング環境のデプロイ情報を取得する": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/package-version-staging.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_ステージング環境の個社別デプロイ情報を解析する": {
                            "runAfter": {
                                "egaku_ステージング環境のデプロイ情報を取得する": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_ステージング環境のデプロイ情報を取得する')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "packageVersions": {
                                            "items": {
                                                "properties": {
                                                    "clinetCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "deployTimeStamp": {
                                                        "type": "string"
                                                    },
                                                    "relatedURL": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "clinetCompanyName",
                                                    "version",
                                                    "deployTimeStamp",
                                                    "relatedURL"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "egaku_本番環境のデプロイ情報を取得する": {
                            "runAfter": {
                                "egaku_ステージング環境の個社別デプロイ情報を解析する": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_address')))}/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": false,
                                    "path": "/Shared Documents/package-version-production.json",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "egaku_本番環境の個社別デプロイ情報を解析する": {
                            "runAfter": {
                                "egaku_本番環境のデプロイ情報を取得する": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('egaku_本番環境のデプロイ情報を取得する')?['$content'])",
                                "schema": {
                                    "properties": {
                                        "packageVersions": {
                                            "items": {
                                                "properties": {
                                                    "clinetCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "deployApprover": {
                                                        "type": "string"
                                                    },
                                                    "deployTimeStamp": {
                                                        "type": "string"
                                                    },
                                                    "relatedURL": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "clinetCompanyName",
                                                    "version",
                                                    "deployTimeStamp",
                                                    "deployApprover",
                                                    "relatedURL"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "ジョイン済み個社別デプロイ情報を解析する": {
                            "runAfter": {
                                "ステージング環境と本番環境のデプロイ情報を社名でジョインする": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('ステージング環境と本番環境のデプロイ情報を社名でジョインする')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "clinetCompanyName": {
                                                "type": "string"
                                            },
                                            "prodDeployApprover": {
                                                "type": "string"
                                            },
                                            "prodDeployTimeStamp": {
                                                "type": "string"
                                            },
                                            "prodVersion": {
                                                "type": "string"
                                            },
                                            "relatedURL": {
                                                "type": "string"
                                            },
                                            "stgDeployTimeStamp": {
                                                "type": "string"
                                            },
                                            "stgVersion": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "clinetCompanyName",
                                            "relatedURL",
                                            "stgVersion",
                                            "stgDeployTimeStamp",
                                            "prodVersion",
                                            "prodDeployTimeStamp",
                                            "prodDeployApprover"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "ステージング環境と本番環境のデプロイ情報を社名でジョインする": {
                            "runAfter": {
                                "egaku_本番環境の個社別デプロイ情報を解析する": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "let parsedJson1 = workflowContext.actions.egaku_ステージング環境の個社別デプロイ情報を解析する.outputs.body.packageVersions;\r\nlet parsedJson2 = workflowContext.actions.egaku_本番環境の個社別デプロイ情報を解析する.outputs.body.packageVersions;\r\n\r\nlet combinedData = [];\r\n\r\nparsedJson1.forEach(item1 => {\r\n    let match = parsedJson2.find(item2 => item2.clinetCompanyName === item1.clinetCompanyName);\r\n    if (match) {\r\n        // 一致するアイテムが見つかった場合、結合して新しいオブジェクトを作成\r\n        let combinedItem = {\r\n            clinetCompanyName: item1.clinetCompanyName,\r\n            relatedURL: item1.relatedURL,\r\n            stgVersion: item1.version,\r\n            stgDeployTimeStamp: item1.deployTimeStamp,\r\n            prodVersion: match.version,\r\n            prodDeployTimeStamp: match.deployTimeStamp,\r\n            prodDeployApprover: match.deployApprover\r\n        };\r\n        combinedData.push(combinedItem);\r\n    }\r\n});\r\nreturn combinedData;\r\n"
                            }
                        },
                        "既存のリストの全アイテムを削除": {
                            "foreach": "@body('既存のリストの全アイテムを取得（削除の為）')?['value']",
                            "actions": {
                                "アイテムの削除": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "delete",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items/@{encodeURIComponent(items('既存のリストの全アイテムを削除')?['ID'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "既存のリストの全アイテムを取得（削除の為）": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "既存のリストの全アイテムを取得（削除の為）": {
                            "runAfter": {
                                "ジョイン済み個社別デプロイ情報を解析する": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('list_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('list_name')))}/items"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sharepointonline": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sharepointonline_name'))]",
                                "connectionName": "sharepointonline",
                                "id": "/subscriptions/3cbb3917-1548-490a-ad83-a9c0b1a66fed/providers/Microsoft.Web/locations/japaneast/managedApis/sharepointonline"
                            }
                        }
                    }
                }
            }
        }
    ]
}